ActionString {
  // Base syntax
  Actions   = ListOf<Action, ";"+> ";"?
  Action = Trigger ListOf<Command, ","+> ","?

  // Trigger index
  Trigger   = create
            | activate
            | bump
            | adone
  create    = caseInsensitive<"create">
  activate  = caseInsensitive<"activate">
  bump      = caseInsensitive<"bump">
  adone     = caseInsensitive<"adone">

  // Command index
  Command   = TextureCommand
            | SoundCommand
            | CoronaCommand
            | ColorCommand
            | ExamineCommand
            | SolidCommand
            | NameCommand
            | VisibleCommand
            | MoveCommand
            | RotateCommand
            | LightCommand
            | NoiseCommand
            | PictureCommand
            | MediaCommand
            | SignCommand
            | TeleportCommand
            | WarpCommand
            | URLCommand
            | invalidCommand

  // Enabled / disabled string values
  enabled  = "on" | "true" | "yes"
  disabled = "off" | "false" | "no"
  booleanArgument = boolean
  boolean  = enabled | disabled

  // Loop status
  loopStatus = loop | noloop
  loop       = "loop"
  noloop     = "noloop"

  // Sync status
  syncStatus = sync | nosync
  sync       = "sync"
  nosync     = "nosync"

  // Reset status
  resetStatus = reset | noreset
  reset       = "reset"
  noreset     = "noreset"

  // Resource target
  resourceTarget = (alnum | "." | "/" | ":" | "_" | "-" | "+" | "%" | "?" | "=" | "[" | "]" | "&" | "~" | "!" | "@" | "*" | "(" | ")")+

  // Command parameter (e.g. name=foo, tag=bar)
  namedParameter<paramName, paramSyntax> = paramName "=" paramSyntax

  // Name parameter
  nameParameter = namedParameter<"name", objectName>
  nameArgument = objectName
  objectName = (alnum | "_" | "-")+

  // Invalid command (e.g. unsupported)
  invalidCommand = (~";" ~"," any)*

  // Generic command
  MultiArgumentCommand<commandName, CommandArgument> = commandName CommandArgument*

  // Name command
  NameCommand = MultiArgumentCommand<caseInsensitive<"name">, nameArgument>

  // Solid command
  SolidCommand = MultiArgumentCommand<caseInsensitive<"solid">, SolidArgument>
  SolidArgument = booleanArgument | nameArgument

  // Texture command
  TextureCommand = MultiArgumentCommand<caseInsensitive<"texture">, TextureArgument>
  TextureArgument = maskParameter | tagParameter | nameParameter | textureName
  textureName = (alnum | "." | "_" | "-")+

  maskParameter = namedParameter<"mask", maskName>
  maskName = alnum+

  tagParameter = namedParameter<"tag", tagName>
  tagName = alnum+

  // Color command
  ColorCommand  = MultiArgumentCommand<caseInsensitive<"color">, ColorArgument>
  ColorArgument = nameParameter | colorArgument
  colorArgument = colorName
  colorName     = colorcode
  colorcode     = alnum+

  // Sound command
  SoundCommand    = MultiArgumentCommand<caseInsensitive<"sound">, SoundArgument>
  SoundArgument   = nameParameter | loopStatus | soundName
  soundName       = resourceTarget

  // Visible command
  VisibleCommand = MultiArgumentCommand<caseInsensitive<"visible">, VisibleArgument>
  VisibleArgument = booleanArgument | nameArgument

  // Move command
  MoveCommand = MultiArgumentCommand<caseInsensitive<"move">, MoveArgument>
  MoveArgument = MoveDistances
               | loopStatus
               | syncStatus
               | resetStatus
               | nameParameter
               | timeParameter
               | waitParameter
  MoveDistances = signedFloat+
  timeParameter = namedParameter<"time", float>
  waitParameter = namedParameter<"wait", float>
  sign = "+" | "-"
  float = digit* "." digit+ -- fract
        | digit+            -- whole
  signedFloat = sign? float
  forceSignedFloat = sign float

  // Rotate command
  RotateCommand = MultiArgumentCommand<caseInsensitive<"rotate">, RotateArgument>
  RotateArgument = RotateDistances
                 | syncStatus
                 | timeParameter
                 | loopStatus
                 | resetStatus
                 | waitParameter
                 | nameParameter
  RotateDistances = signedFloat+

  // Corona command
  CoronaCommand = MultiArgumentCommand<caseInsensitive<"corona">, CoronaArgument>
  CoronaArgument = maskParameter | sizeParameter | nameParameter | resourceTarget
  sizeParameter = namedParameter<"size", float>

  // Examine command
  ExamineCommand = caseInsensitive<"examine">

  // Light command
  LightCommand = MultiArgumentCommand<caseInsensitive<"light">, LightArgument>
  LightArgument = lightTypeParameter
                | colorParameter
                | brightnessParameter
                | radiusParameter
                | nameParameter
                | fxParameter
                | timeParameter
                | angleParameter
                | pitchParameter
  colorParameter      = namedParameter<"color", colorName>
  lightTypeParameter  = namedParameter<"type", lightType>
  lightType           = "point" | "spot"
  brightnessParameter = namedParameter<"brightness", float>
  radiusParameter     = namedParameter<"radius", float>
  fxParameter         = namedParameter<"fx", fxType>
  fxType              = "blink" | "fadein" | "fadeout" | "fire" | "flicker" | "flash" | "pulse"
  angleParameter      = namedParameter<"angle", float>
  pitchParameter      = namedParameter<"pitch", float>

  // Noise command
  NoiseCommand  = MultiArgumentCommand<caseInsensitive<"noise">, NoiseArgument>
  NoiseArgument = overlapStatus | resourceTarget
  overlapStatus = "overlap"

  // Picture command
  PictureCommand  = MultiArgumentCommand<caseInsensitive<"picture">, PictureArgument>
  PictureArgument = updateParameter | nameParameter | resourceTarget
  updateParameter = namedParameter<"update", positiveInteger>
  positiveInteger = digit+

  // Media command
  MediaCommand  = MultiArgumentCommand<caseInsensitive<"media">, MediaArgument>
  MediaArgument = resourceTarget

  // Sign command
  SignCommand = MultiArgumentCommand<caseInsensitive<"sign">, SignArgument>
  SignArgument = colorParameter | bcolorParameter | nameParameter | signText
  bcolorParameter = namedParameter<"bcolor", colorName>
  signStringDelimiter = "\""
  signText = signStringDelimiter (~signStringDelimiter any)* signStringDelimiter

  // Teleport command (TODO: check relative/absolute altitude behavior on AW)
  TeleportCommand  = caseInsensitive<"teleport"> worldName? WorldCoordinates?
  worldName        = worldString
  worldString      = letter+ (letter | digit)*
  WorldCoordinates = (AbsoluteCoordinates | RelativeCoordinates) altitude? direction?
  RelativeCoordinates = forceSignedFloat forceSignedFloat
  AbsoluteCoordinates = nsCoordinate ewCoordinate

  nsCoordinate = float (northSign | southSign)
  ewCoordinate = float (eastSign | westSign)
  northSign = caseInsensitive<"N">
  southSign = caseInsensitive<"S">
  eastSign  = caseInsensitive<"E">
  westSign  = caseInsensitive<"W">
  altitude = sign? float caseInsensitive<"a">
  direction = positiveInteger

  // URL command
  URLCommand = MultiArgumentCommand<caseInsensitive<"url">, URLArgument>
  URLArgument = urlTargetParameter | resourceTarget
  urlTargetParameter = namedParameter<"target", "aw_3d">

  // Warp command
  WarpCommand = caseInsensitive<"warp"> WorldCoordinates
}
